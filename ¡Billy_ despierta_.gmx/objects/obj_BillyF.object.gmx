<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BillyFr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicialización de Variables

grav = 0.2;
hsp = 0;
vsp = 0;
movespeed = 3;
jumpspeed = 6;
global.lechumbrella = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.lechumbrella = false;
audio_play_sound(snd_l, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimiento del Personaje

//Obtener las entradas de teclado

key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check_pressed(vk_up);
/*leftmove = false;
rightmove = false;
if(key_left)
{
    leftmove = true;
}
if(keyboard_check_released(vk_left))
{
    leftmove = false;
}
if(key_right)
{
    rightmove = true;
}
if(keyboard_check_released(vk_right))
{
    rightmove = false;
}
*/
//Operaciones con las entradas de teclado

move = key_right - key_left;
hsp = move * movespeed;

//Sprite

image_speed = 0.4;

if (key_right)
{
    sprite_index = spr_BillyFr;
}
/*if((sprite_index == spr_BillyFr) || (sprite_index == spr_BillyFsr) &amp;&amp; (rightmove == false))
{
    sprite_index = spr_BillyFqr;
}
*/
if (key_left)
{
    sprite_index = spr_BillyFl;
}
/*if((sprite_index == spr_BillyFl) || (sprite_index == spr_BillyFsl) &amp;&amp; (leftmove == false))
{
    sprite_index = spr_BillyFql;
}
*/
if(key_right) &amp;&amp; (-vsp)
{
    sprite_index = spr_BillyFsr;
}
if(key_left) &amp;&amp; (-vsp)
{
    sprite_index = spr_BillyFsl;
}

if(move == 0)
{
    sprite_index = spr_BillyF;
}

//Colisión horizontal

if(place_meeting(x + hsp, y, obj_wall)) || (place_meeting(x + hsp, y, obj_block))  || (place_meeting(x + hsp, y, obj_blockm))
{
    while(!place_meeting(x + sign(hsp), y, obj_wall)) &amp;&amp; (!place_meeting(x + sign(hsp), y, obj_block))  &amp;&amp; (!place_meeting(x + sign(hsp), y, obj_blockm))
    {
        x += sign(hsp);
    }
    hsp = 0    
}
x += hsp;

//Salto

if (vsp &lt; 10)
{
    vsp += grav;
} 
if(place_meeting(x, y + 1, obj_wall)) || (place_meeting(x, y + 1, obj_block))  || (place_meeting(x, y + 1, obj_blockm))
{
    vsp = key_up * -jumpspeed;
}

//Colisión vertical

if(place_meeting(x, y + vsp, obj_wall)) || (place_meeting(x, y + vsp, obj_block))  || (place_meeting(x, y + vsp, obj_blockm))
{
    while(!place_meeting(x, y + sign(vsp), obj_wall)) &amp;&amp; (!place_meeting(x, y + sign(vsp), obj_block))  &amp;&amp; (!place_meeting(x, y + sign(vsp), obj_blockm))
    {
        y += sign(vsp);
    }
    vsp = 0    
}
y += vsp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_carrotl">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.lechumbrella)
{
    with(other)
    {
        move_towards_point(obj_MrBroccoli.x, obj_MrBroccoli.y, 50);
    }
}
else
{
    with(other)
    {
        instance_destroy();
    }
    instance_create(x, y, obj_expBcarrot);
    audio_play_sound(snd_expBcarrot, 10, false);
    health -= 25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_carrot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.lechumbrella)
{
    with(other)
    {
        move_towards_point(obj_MrBroccoli.x, obj_MrBroccoli.y, 50);
    }
}
else
{
    with(other)
    {
        instance_destroy();
    }
    instance_create(x, y, obj_expBcarrot);
    audio_play_sound(snd_expBcarrot, 10, false);
    health -= 25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.key = true;
with(other)
{
    instance_destroy();
}
audio_play_sound(snd_pickey, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_MrBroccoli">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
